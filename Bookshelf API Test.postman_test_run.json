{
	"id": "eed130eb-002b-477f-9490-74eadc149bb1",
	"name": "Bookshelf API Test",
	"timestamp": "2023-02-28T09:55:48.050Z",
	"collection_id": "26057600-062ae9cf-90ce-4e5a-b018-3adae7c253f8",
	"folder_id": 0,
	"environment_id": "26057600-958373f9-f464-423a-a48b-70a37819c749",
	"totalPass": 99,
	"delay": 0,
	"persist": true,
	"status": "finished",
	"startedAt": "2023-02-28T09:55:44.136Z",
	"totalFail": 5,
	"results": [
		{
			"id": "24dccddf-422a-4b7e-b1bc-aa38a2704b37",
			"name": "[Mandatory] Add Book With Complete Data",
			"url": "http://localhost:9000/books",
			"time": 76,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"status code should be 201": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"response body data should contain bookId": true
			},
			"testPassFailCounts": {
				"status code should be 201": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data should contain bookId": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				76
			],
			"allTests": [
				{
					"status code should be 201": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"response body data should contain bookId": true
				}
			]
		},
		{
			"id": "cce8f7a4-b4c4-4013-86fc-cdeaa1eed11b",
			"name": "[Mandatory] Add Book With Finished Reading",
			"url": "http://localhost:9000/books",
			"time": 9,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"status code should be 201": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"response body data should contain bookId": true
			},
			"testPassFailCounts": {
				"status code should be 201": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data should contain bookId": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"status code should be 201": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"response body data should contain bookId": true
				}
			]
		},
		{
			"id": "78951fd7-4049-40be-9434-3eee4fefdd53",
			"name": "[Mandatory] Add Book Without Name",
			"url": "http://localhost:9000/books",
			"time": 7,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "05432cdc-2e25-485f-85c8-59f8cbb55a7c",
			"name": "[Mandatory] Add Book with Page Read More Than Page Count",
			"url": "http://localhost:9000/books",
			"time": 7,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "1eb6844a-7ed9-4b7e-a3bd-0013662f1aaa",
			"name": "[Mandatory] Get All Books",
			"url": "http://localhost:9000/books",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains two items": true,
				"the books should have contains only id, name, and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains two items": {
					"pass": 1,
					"fail": 0
				},
				"the books should have contains only id, name, and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains two items": true,
					"the books should have contains only id, name, and publisher property": true
				}
			]
		},
		{
			"id": "743aadb4-e6a3-4731-967e-fe0164cb3637",
			"name": "[Mandatory] Get Detail Books With Correct Id",
			"url": "http://localhost:9000/books/JYrj1NK10O0_4BrO",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"response code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should an object": true,
				"response body object should contain correct property and value": true,
				"response body data object should contain book object": true,
				"book object should contain correct property and value": true
			},
			"testPassFailCounts": {
				"response code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should contain book object": {
					"pass": 1,
					"fail": 0
				},
				"book object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"response code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should an object": true,
					"response body object should contain correct property and value": true,
					"response body data object should contain book object": true,
					"book object should contain correct property and value": true
				}
			]
		},
		{
			"id": "278eb5a8-0a63-4e3c-ad43-599b58e092ab",
			"name": "[Mandatory] Get Detail Finished Book",
			"url": "http://localhost:9000/books/Ni8S6HO_w9MrA8S_",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"response code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should an object": true,
				"response body object should contain correct property and value": true,
				"response body data object should contain book object": true,
				"book object should contain correct property and value": true
			},
			"testPassFailCounts": {
				"response code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should contain book object": {
					"pass": 1,
					"fail": 0
				},
				"book object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"response code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should an object": true,
					"response body object should contain correct property and value": true,
					"response body data object should contain book object": true,
					"book object should contain correct property and value": true
				}
			]
		},
		{
			"id": "2fcc4884-9d8e-4421-b0bd-1746c95feac5",
			"name": "[Mandatory] Get Detail Books With Invalid Id",
			"url": "http://localhost:9000/books/xxxxx",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"response code should be 404": true,
				"response header Content-Type should be application/json": true,
				"response body should an object": true,
				"response body object should contain correct property and value": true
			},
			"testPassFailCounts": {
				"response code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"response code should be 404": true,
					"response header Content-Type should be application/json": true,
					"response body should an object": true,
					"response body object should contain correct property and value": true
				}
			]
		},
		{
			"id": "14e69441-c0a3-40b9-832b-7d1719ce2615",
			"name": "[Mandatory] Update Book With Complete Data",
			"url": "http://localhost:9000/books/JYrj1NK10O0_4BrO",
			"time": 8,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"when get detail books": true,
				"book object should contain updated values": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"when get detail books": {
					"pass": 1,
					"fail": 0
				},
				"book object should contain updated values": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"when get detail books": true,
					"book object should contain updated values": true
				}
			]
		},
		{
			"id": "3a6f3575-402c-4c48-a516-8c523cc88f81",
			"name": "[Mandatory] Update Book Without Name",
			"url": "http://localhost:9000/books/JYrj1NK10O0_4BrO",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "5c0e822b-9f1c-41b7-ada7-c766c5561dce",
			"name": "[Mandatory] Update Book With Page Read More Than Page Count",
			"url": "http://localhost:9000/books/JYrj1NK10O0_4BrO",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "e3f57386-9182-468a-b3df-e5edf53dd8ea",
			"name": "[Mandatory] Update Book with Invalid Id",
			"url": "http://localhost:9000/books/xxxxx",
			"time": 9,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"status code should be 404": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"status code should be 404": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "1d78dc49-b03d-40a7-87d3-c8a5f6d1b5e5",
			"name": "[Mandatory] Delete Book with Correct Id",
			"url": "http://localhost:9000/books/JYrj1NK10O0_4BrO",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"when get detail books": true,
				"The book should be not found": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"when get detail books": {
					"pass": 1,
					"fail": 0
				},
				"The book should be not found": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"when get detail books": true,
					"The book should be not found": true
				}
			]
		},
		{
			"id": "60c387ff-b959-4caa-83c5-20fe53b74fee",
			"name": "[Mandatory] Delete Finished book",
			"url": "http://localhost:9000/books/Ni8S6HO_w9MrA8S_",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"when get detail books": true,
				"The book should be not found": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"when get detail books": {
					"pass": 1,
					"fail": 0
				},
				"The book should be not found": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"when get detail books": true,
					"The book should be not found": true
				}
			]
		},
		{
			"id": "3c760c10-44c8-4ee2-babe-0003ecefe637",
			"name": "[Mandatory] Delete Book with Invalid Id",
			"url": "http://localhost:9000/books/xxxxx",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"status code should be 404": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"status code should be 404": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "82c2196d-330c-4cfb-88d4-f19416068143",
			"name": "Add Reading and Finished Book",
			"url": "http://localhost:9000/books",
			"time": 6,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				6
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "33831434-044e-45d9-83a6-9a219945b544",
			"name": "Add Reading and Unfinished Book with \"Dicoding\" Name",
			"url": "http://localhost:9000/books",
			"time": 5,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				5
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "1b0bc4e0-eb4f-4fd1-a31a-bdb752f0036f",
			"name": "Add Unreading Books and Unfinished Book \"Dicoding\" Name",
			"url": "http://localhost:9000/books",
			"time": 6,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				6
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "532d5846-8066-4743-82f9-da3efc43d983",
			"name": "Add Unreading Books and Unfinished Book",
			"url": "http://localhost:9000/books",
			"time": 5,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				5
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "19a9b12d-79a6-4665-9b8f-9dadf4ba8a1f",
			"name": "[Optional] Get All Reading Books",
			"url": "http://localhost:9000/books?reading=1",
			"time": 9,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 2 items": false,
				"the books should have contains only name and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 2 items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only name and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 2 items": false,
					"the books should have contains only name and publisher property": true
				}
			]
		},
		{
			"id": "e739d81f-dc29-4e1b-a563-ae7667dd6f81",
			"name": "[Optional] Get All Unreading Books",
			"url": "http://localhost:9000/books?reading=0",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains at 2 items": false,
				"the books should have contains only name and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains at 2 items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only name and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains at 2 items": false,
					"the books should have contains only name and publisher property": true
				}
			]
		},
		{
			"id": "86ab3c30-c9f0-4722-bc29-4a2c73d1db2d",
			"name": "[Optional] Get All Finished Books",
			"url": "http://localhost:9000/books?finished=1",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 1 items": false,
				"the books should have contains only name and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 1 items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only name and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 1 items": false,
					"the books should have contains only name and publisher property": true
				}
			]
		},
		{
			"id": "77388af1-fef7-48e5-9afa-76a34d78f58f",
			"name": "[Optional] Get All Unfinished Books",
			"url": "http://localhost:9000/books?finished=0",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 3 items": false,
				"the books should have contains only name and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 3 items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only name and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 3 items": false,
					"the books should have contains only name and publisher property": true
				}
			]
		},
		{
			"id": "8235a283-5ba4-455c-b7e0-c3aa4ae6a2f5",
			"name": "[Optional] Get All Books Contains \"Dicoding\" Name",
			"url": "http://localhost:9000/books?name=Dicoding",
			"time": 4,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 2 items": false,
				"the books should have contains only name and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 2 items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only name and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 2 items": false,
					"the books should have contains only name and publisher property": true
				}
			]
		}
	],
	"count": 1,
	"totalTime": 228,
	"collection": {
		"requests": [
			{
				"id": "24dccddf-422a-4b7e-b1bc-aa38a2704b37",
				"method": "POST"
			},
			{
				"id": "cce8f7a4-b4c4-4013-86fc-cdeaa1eed11b",
				"method": "POST"
			},
			{
				"id": "78951fd7-4049-40be-9434-3eee4fefdd53",
				"method": "POST"
			},
			{
				"id": "05432cdc-2e25-485f-85c8-59f8cbb55a7c",
				"method": "POST"
			},
			{
				"id": "1eb6844a-7ed9-4b7e-a3bd-0013662f1aaa",
				"method": "GET"
			},
			{
				"id": "743aadb4-e6a3-4731-967e-fe0164cb3637",
				"method": "GET"
			},
			{
				"id": "278eb5a8-0a63-4e3c-ad43-599b58e092ab",
				"method": "GET"
			},
			{
				"id": "2fcc4884-9d8e-4421-b0bd-1746c95feac5",
				"method": "GET"
			},
			{
				"id": "14e69441-c0a3-40b9-832b-7d1719ce2615",
				"method": "PUT"
			},
			{
				"id": "3a6f3575-402c-4c48-a516-8c523cc88f81",
				"method": "PUT"
			},
			{
				"id": "5c0e822b-9f1c-41b7-ada7-c766c5561dce",
				"method": "PUT"
			},
			{
				"id": "e3f57386-9182-468a-b3df-e5edf53dd8ea",
				"method": "PUT"
			},
			{
				"id": "1d78dc49-b03d-40a7-87d3-c8a5f6d1b5e5",
				"method": "DELETE"
			},
			{
				"id": "60c387ff-b959-4caa-83c5-20fe53b74fee",
				"method": "DELETE"
			},
			{
				"id": "3c760c10-44c8-4ee2-babe-0003ecefe637",
				"method": "DELETE"
			},
			{
				"id": "82c2196d-330c-4cfb-88d4-f19416068143",
				"method": "POST"
			},
			{
				"id": "33831434-044e-45d9-83a6-9a219945b544",
				"method": "POST"
			},
			{
				"id": "1b0bc4e0-eb4f-4fd1-a31a-bdb752f0036f",
				"method": "POST"
			},
			{
				"id": "532d5846-8066-4743-82f9-da3efc43d983",
				"method": "POST"
			},
			{
				"id": "19a9b12d-79a6-4665-9b8f-9dadf4ba8a1f",
				"method": "GET"
			},
			{
				"id": "e739d81f-dc29-4e1b-a563-ae7667dd6f81",
				"method": "GET"
			},
			{
				"id": "86ab3c30-c9f0-4722-bc29-4a2c73d1db2d",
				"method": "GET"
			},
			{
				"id": "77388af1-fef7-48e5-9afa-76a34d78f58f",
				"method": "GET"
			},
			{
				"id": "8235a283-5ba4-455c-b7e0-c3aa4ae6a2f5",
				"method": "GET"
			}
		]
	}
}